---
- name: Install and configure MySQL on EC2 instance
  hosts: mysql_servers
  become: yes
  vars:
    mysql_root_password: 'your_root_password_here'

  tasks:
    - name: Update apt-get cache
      apt:
        update_cache: yes

    - name: Install MySQL server and Python MySQL library
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - mysql-server  # MySQL Server
        - python3-mysqldb  # MySQL Python library for Python 3.x

    - name: Start and enable MySQL service
      service:
        name: mysql
        state: started
        enabled: yes

    - name: Check if MySQL root password is already set
      shell: >
        mysql -u root -e "SELECT 1" > /dev/null 2>&1
      ignore_errors: yes
      register: mysql_root_password_check

    - name: Set MySQL root password
      mysql_user:
        login_user: root
        login_password: ''
        name: root
        host_all: yes
        password: "{{ mysql_root_password }}"
      when: mysql_root_password_check.failed

    - name: Remove anonymous users
      mysql_user:
        name: ''
        host_all: yes
        state: absent
        login_user: root
        login_password: "{{ mysql_root_password }}"
      when: mysql_root_password_check.failed

    - name: Disallow root login remotely
      mysql_user:
        name: root
        host: "{{ item }}"
        state: absent
        login_user: root
        login_password: "{{ mysql_root_password }}"
      loop:
        - "{{ ansible_hostname }}"
        - '127.0.0.1'
        - '::1'
      when: mysql_root_password_check.failed

    - name: Remove test database and access to it
      mysql_db:
        name: test
        state: absent
        login_user: root
        login_password: "{{ mysql_root_password }}"
      when: mysql_root_password_check.failed

    - name: Reload privilege tables
      mysql_db:
        name: ''
        state: present
        login_user: root
        login_password: "{{ mysql_root_password }}"
      when: mysql_root_password_check.failed
